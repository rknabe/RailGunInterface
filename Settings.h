#include <avr/pgmspace.h>
#ifndef SETTINGS_h
#define SETTINGS_h

#include <Arduino.h>
#include <EEPROM.h>
#include "PIDReportType.h"

#define JOYSTICK_DEFAULT_AXIS_MINIMUM 0
#define JOYSTICK_DEFAULT_AXIS_MAXIMUM 1023

typedef struct {
  char id[10];
  char ver[6];
  int16_t xAxisMinimum;
  int16_t xAxisMaximum;
  int16_t yAxisMinimum;
  int16_t yAxisMaximum;
  bool autoRecoil;
  int16_t triggerRepeatRate;
  int16_t triggerHoldTime;
} Settings; //this total needs to match size given in PidDesciptor.h line 631, and size of Settings struct in Settings.h

//all settings
class SettingsEEPROM {
public:
  Settings data;
  uint8_t checksum;

  Settings load(bool defaults);
  Settings getDefaults();
  void save(Settings settings);
  uint8_t calcChecksum();
};

const static unsigned char logo[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x03, 0xFF, 0xF0, 0xFF, 
  0xFF, 0xE1, 0xC0, 0xC0, 0x03, 0xFF, 0xF1, 0xFF, 0xFF, 0xE3, 0xE0, 0xC0, 
  0x03, 0xFF, 0xF3, 0x7F, 0xFE, 0xE7, 0xE0, 0xC0, 0x07, 0xFE, 0xF3, 0x7F, 
  0xFE, 0xE7, 0xF0, 0xE0, 0x07, 0xFE, 0xF7, 0x7F, 0xFE, 0xE7, 0xF0, 0xE0, 
  0x07, 0xFE, 0xF7, 0x3F, 0xFC, 0xE7, 0xF8, 0xE0, 0x0F, 0xFC, 0xF7, 0x3F, 
  0x00, 0xE7, 0x7C, 0xF0, 0x0F, 0x80, 0xF7, 0x00, 0x00, 0xE7, 0x7C, 0xF0, 
  0x0F, 0x06, 0xF7, 0x1F, 0xFE, 0xE7, 0x3E, 0xF0, 0x0F, 0x0F, 0xF7, 0x1F, 
  0xFE, 0xE7, 0x1F, 0xF8, 0x1F, 0x0F, 0xF7, 0x1F, 0xFE, 0xE7, 0x1F, 0xF8, 
  0x1F, 0x0F, 0xF7, 0x1F, 0xFE, 0xE7, 0x3F, 0xF8, 0x1E, 0x0F, 0xF7, 0x0F, 
  0xFE, 0xE3, 0x3F, 0x78, 0x3E, 0x0F, 0xF7, 0x0F, 0xFE, 0xE3, 0x3F, 0x7C, 
  0x3E, 0x0F, 0xF7, 0x0F, 0xCE, 0xE3, 0x3F, 0x7C, 0x3C, 0x8F, 0xF7, 0x00, 
  0x8E, 0xE3, 0x7B, 0x3C, 0x7C, 0x8F, 0xF7, 0x00, 0x8E, 0xE7, 0x7B, 0x3E, 
  0x7C, 0xFF, 0xF7, 0x07, 0x8E, 0xE7, 0x71, 0x3E, 0x7C, 0xFF, 0xF7, 0x07, 
  0x0E, 0xE7, 0xF0, 0xFE, 0x7F, 0xFF, 0xF3, 0x03, 0x0E, 0xEF, 0xF0, 0xDF, 
  0xFF, 0xFF, 0xF3, 0x03, 0x0E, 0x6F, 0xE0, 0xDF, 0xFF, 0xFF, 0xF3, 0x03, 
  0x06, 0x6E, 0xE0, 0xFF, 0xFF, 0xFF, 0xF1, 0x03, 0x02, 0x20, 0x00, 0xEF, 
  0xFF, 0xFF, 0xF0, 0x01, 0x00, 0x00, 0x80, 0xEF, 0xFF, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x80, 0xEF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF7, 
  0xFF, 0x03, 0x00, 0x00,   };

#endif  // SETTINGS_h
